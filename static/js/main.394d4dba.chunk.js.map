{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","userId","usersFromServer","find","App","useState","inputTitle","setInputTitle","inputUser","setInputUser","visibleTodos","setVisibleTodos","hasTitle","setHasTitle","hasUser","setHasUser","action","method","onSubmit","event","preventDefault","newUser","newTodo","reduce","acc","curr","current","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.394d4dba.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <>\n      {user && (\n        <article\n          data-id={id}\n          className={\n            completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'\n          }\n        >\n          <h2 className=\"TodoInfo__title\">{title}</h2>\n\n          <UserInfo user={user} />\n        </article>\n      )}\n    </>\n  );\n};\n","import { Todo } from '../../types/Todo';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [inputUser, setInputUser] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [hasTitle, setHasTitle] = useState(true);\n  const [hasUser, setHasUser] = useState(true);\n  const addTodo = () => {\n    const newUser = usersFromServer.find(\n      user => user.name === inputUser,\n    ) || null;\n\n    const newTodo: Todo = {\n      id: (visibleTodos.reduce(\n        (acc, curr) => (acc.id > curr.id ? acc : curr),\n      )).id + 1,\n      userId: newUser !== null ? newUser.id : null,\n      title: inputTitle,\n      completed: false,\n      user: newUser,\n    };\n\n    setHasTitle(inputTitle !== '');\n    setHasUser(inputUser !== '');\n\n    if (inputTitle !== '' && inputUser !== '') {\n      setVisibleTodos(current => [\n        ...current,\n        newTodo,\n      ]);\n      setInputTitle('');\n      setInputUser('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          addTodo();\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              className=\"input\"\n              placeholder=\"Enter a title\"\n              value={inputTitle}\n              onChange={(event) => {\n                setInputTitle(event.target.value);\n              }}\n            />\n          </label>\n          {(hasTitle === false && inputTitle === '') && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={inputUser}\n              onChange={(event) => {\n                setInputUser(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.name}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {(hasUser === false && inputUser === '') && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={visibleTodos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}